{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"wLAYeA,EAVF,SAAAC,GAA8B,IAA5BC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,iBACXC,EAAQF,EAAKG,UACb,qBAAuB,iBAC7B,OACIC,EAAAC,EAAAC,cAAA,UAAKN,EAAKO,QACNH,EAAAC,EAAAC,cAAA,UAAQE,QAASP,GAAmBC,qBCWjCO,EAfA,WAEb,OADgBC,IAAMC,IAHR,cAICC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAAAM,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BL,EALA,SAACQ,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,GAAAC,OAbF,aAaE,KAAAA,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QC8D5BM,EAzEH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAKhBG,oBAAU,WACRC,IAAqBzB,KAAK,SAAA0B,GACxBX,EAASW,MAEV,IAEH,IAAMC,EAAcL,EAAUR,EAAQA,EAAMc,OAAO,SAAAxC,GAAI,OAAIA,EAAKG,YA6ChE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAM2B,GAAYD,KAAnC,eACSA,EAAU,qBAAiB,WAGtC9B,EAAAC,EAAAC,cAAA,UAtBFiC,EAAYE,IAAI,SAAAzC,GAAI,OAClBI,EAAAC,EAAAC,cAACoC,EAAD,CACEC,IAAK3C,EAAKiB,GACVjB,KAAMA,EACNC,iBAAkB,kBAjCG,SAAAgB,GACzB,IAAMjB,EAAO0B,EAAMkB,KAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,IAChC6B,EAAWtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQxB,EAAR,CAAcG,WAAYH,EAAKG,YAEhDkC,EAAmBpB,EAAI6B,GAAalC,KAAK,SAAAoC,GACvCrB,EAASD,EAAMe,IAAI,SAAAzC,GAAI,OAAKA,EAAKiB,KAAOA,EAAKjB,EAAOgD,OAEnDC,MAAM,SAAAC,GACLC,MAAK,gBAAAhC,OACanB,EAAKO,QADlB,iDAGLoB,EAASD,EAAMc,OAAO,SAAAK,GAAC,OAAIA,EAAE5B,KAAOA,OAsBZmC,CAAmBpD,EAAKiB,UAmBlDb,EAAAC,EAAAC,cAAA,QAAM+C,SArCM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASuB,EACT2B,MAAM,IAAIC,MAAOC,YACjBxD,UAAWyD,KAAKC,SAAW,IAE7BxB,EAAmBmB,GAAY5C,KAAK,SAAAoC,GAClCrB,EAASD,EAAMP,OAAO6B,IACtBjB,EAAW,QA6BT3B,EAAAC,EAAAC,cAAA,SAAOwD,MAAOhC,EAASiC,SAfJ,SAAAT,GACvBU,QAAQC,IAAIX,EAAMY,OAAOJ,OACzB/B,EAAWuB,EAAMY,OAAOJ,UAcpB1D,EAAAC,EAAAC,cAAA,UAAQ6D,KAAK,UAAb,eCnERC,IAASC,OACPjE,EAAAC,EAAAC,cAACgE,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.60860349.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n    return (\n        <li>{note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => (note.id !== id ? note : returnedNote)));\n    })\n      .catch(error => {\n        alert(\n          `muistiinpano ${note.content} on jo valitettavasti poistettu plavelimelta`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString,\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ));\n\n  //tapahtumankäsittelijä -> noten voi editoida\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          näytä {showAll ? \"vain tärkeät\" : \"kaikki\"}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">tallenna</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}